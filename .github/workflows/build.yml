name: Build vote plan and deploy to Github Pages
on:
  push:
    branches:
      - main

jobs:
  build:
    # see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version:
          - 14.x

    # TODO: add e2e tests
    steps:
      - name: Checkout code
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.node-version }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install npm packages for automated environment
        # see https://docs.npmjs.com/cli/v6/commands/npm-ci
        run: npm ci

      - name: Run angular lint
        run: npm run lint

      - name: Run application tests using chrome
        run: npm run test:chrome

      - name: Build application in production mode
        run: npm run build:prod

      - name: Prepare application for Github Pages
        run: npm run build:gh-pages

      - name: Copy application data to dist-prod
        run: npm run build:data:copy

      - name: Deploy to GitHub Pages
        # see https://github.com/crazy-max/ghaction-github-pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: dist-prod
          fqdn: www.voteplan.org
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
